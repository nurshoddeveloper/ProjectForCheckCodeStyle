{"version":3,"sources":["static/success.png","static/not_found.svg","components/common/Input.jsx","components/TodoItem.jsx","components/IncomeItem.jsx","components/IncomeUpdate.jsx","components/ExpensItem.jsx","components/ExpensUpdate.jsx","components/ProjectItem.jsx","components/ProjectUpdate.jsx","components/common/Button.jsx","utils/auth.js","components/common/Loader.jsx","components/common/Dropdown.jsx","components/common/ProtectedRoute.jsx","components/common/ServerError.jsx","pages/ConfirmEmail.jsx","pages/NotFound.jsx","components/common/Password.jsx","components/LayoutAuth.jsx","pages/Login.jsx","pages/SignUp.jsx","pages/ResetPassword.jsx","pages/ResetLink.jsx","pages/ResetPasswordMessage.jsx","pages/EmailConfirmationMessage.jsx","components/TodoCreate.jsx","pages/Todo.jsx","components/IncomeCreate.jsx","components/ExpensCreate.jsx","pages/TodoDetail.jsx","components/ProjectCreate.jsx","pages/Project.jsx","Router.jsx","index.js","utils/date.js","urls.js","utils/request.js","hooks/request.js","hooks/message.js","components/common/ValidationErrorMessage.jsx","static/send_message.png","components/TodoForm.jsx","components/IncomeForm.jsx","components/ExpensForm.jsx","components/common/Message.jsx","components/common/Modal.jsx","components/common/BaseContext.jsx","components/common/Select.jsx","components/ProjectForm.jsx","utils/validators.js","components/TodoUpdate.jsx"],"names":["module","exports","Input","br","name","className","type","label","validate","imgSrc","component","optional","help","icon","attributes","useFormikContext","errors","touched","htmlFor","src","width","alt","cn","id","TodoItem","item","onUpdate","onDelete","index","update","usePutRequest","url","TODO_DETAIL","replace","remove","useDeleteRequest","useState","showUpdate","setShowUpdate","a","global","confirm","request","loading","center","style","display","css","styles","del","isActive","to","title","getDateTime","createdAt","right","trigger","text","onClick","StyleSheet","create","textDecoration","IncomeItem","INCOME_DETAIL","todoId","isNumber","IncomeUpdate","data","onSubmit","initialValues","ExpensItem","ExpensUpdate","EXPENS_DETAIL","ProjectItem","PROJECT_DETAIL","directorName","incomeMonth","clientNumber","salary","bannerNumber","projectName","ProjectUpdate","Button","rest","marginRight","auth","headers","Authorization","localStorage","token","signin","history","user","userPermissions","permissions","setItem","JSON","stringify","push","signOut","removeItem","undefined","isAuthenticated","getItem","Loader","large","padded","show","classes","margin","marginTop","marginBottom","Dropdown","children","active","setActive","onMouseLeave","DropdownItem","props","Component","NavLink","ProtectedRoute","ErrorItem","field","error","ServerError","Object","keys","map","key","ConfirmEmail","useHistory","confirmationCode","useParams","useLoad","method","CONFIRM","response","isEmpty","img","successImg","button","background","color","NotFound","body","notFound","image","string","height","textAlign","fontSize","Password","placeholder","showPassword","setShowPassword","hasLabel","pointerEvents","LayoutAuth","sidebar","formWrapper","backgroundColor","maxWidth","minWidth","Login","signIn","usePostRequest","SIGNIN","success","email","password","validator","required","onlyMobile","forgotPassword","container","padding","input","SignUp","signUp","SIGNUP","firstName","lastName","companyName","companyPhone","isRegistered","ResetPassword","resetPassword","RESET_PASSWORD","useMessage","showMessage","confirmPassword","ResetLink","resetLink","RESET_LINK","ResetPasswordMessage","sendMessage","EmailConfirmationMessage","TodoCreate","onSuccess","TODO_LIST","TodoForm","Todo","todos","IncomeCreate","todo","INCOME_LIST","params","IncomeForm","ExpensCreate","EXPENS_LIST","ExpensForm","TodoDetail","todoDetail","incomes","expens","ProjectCreate","PROJECT_LIST","ProjectForm","Project","projects","App","BaseContext","path","exact","moment","locale","Sentry","dsn","process","REACT_APP_SENTRY_TOKEN","ReactDOM","render","document","getElementById","date","Date","format","backendUrl","domain","endsWith","substr","length","baseAxios","axios","baseURL","transformResponse","defaults","humps","camelizeKeys","transformRequest","object","File","FormData","formData","entries","value","append","decamelize","reduce","acc","next","interceptors","use","config","decamelizeKeys","options","useRequest","setResponse","setLoading","setError","overrideOptions","sync","status","logout","dependencies","useEffect","useContext","Context","setText","setClassName","ValidationErrorMessage","msg","Message","closeMessage","delay","hiding","setHiding","hidingTimeout","setTimeout","hideTimeout","clearTimeout","message","hide","position","top","animationName","from","opacity","animationDuration","zIndex","Modal","onClose","handleKeyboard","event","keyCode","window","addEventListener","removeEventListener","createPortal","querySelector","createContext","BaseContextWrapper","modalComponent","setModalComponent","Provider","Select","info","optionValue","optionLabel","empty","setFieldValue","values","touch","showInfoButton","setShowInfoButton","strValue","String","stopPropagation","aria-hidden","test","validators","fn","TodoUpdate"],"mappings":"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","file":"static/js/main.87036e12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/success.3fc12c94.png\";","module.exports = __webpack_public_path__ + \"static/media/not_found.6695af99.svg\";","import React from 'react'\nimport cn from 'classnames'\nimport { Field, useFormikContext } from 'formik'\nimport ValidationErrorMessage from './ValidationErrorMessage'\n\nexport default function Input({\n    br = false,\n    name,\n    className,\n    type,\n    label,\n    validate,\n    imgSrc,\n    component = 'input',\n    optional = false,\n    help,\n    icon,\n    ...attributes\n}) {\n    const { errors, touched } = useFormikContext()\n\n    return (\n        <div className=\"field\">\n            {label ? (\n                <label htmlFor={name}>\n                    <div className=\"columns\">\n                        {imgSrc\n                            ? <div className=\"column is-narrow\"><img src={imgSrc} width=\"50\" alt=\"alt\" /></div>\n                            : null}\n\n                        {icon ? <div className=\"column is-narrow\"><ion-icon name={icon} /></div> : null}\n\n                        <div className=\"column\">\n                            {label} &nbsp;\n                            {optional ? <span className=\"form-hint\">не обязательно</span> : null}\n                        </div>\n                    </div>\n                </label>\n            ) : null}\n\n            {br ? (<div><br /></div>) : ''}\n\n            <div className=\"control\">\n                <Field\n                    className={cn(component, className)}\n                    type={type || 'text'}\n                    name={name}\n                    id={name}\n                    component={component}\n                    validate={validate}\n                    {...attributes} />\n\n                <ValidationErrorMessage name={name} />\n            </div>\n\n            {help && (!errors[name] || !touched[name]) ? (\n                <p className=\"form-hint\">{help}</p>\n            ) : null}\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport cn from 'classnames'\nimport { css, StyleSheet } from 'aphrodite'\nimport { NavLink } from 'react-router-dom'\nimport { getDateTime } from '../utils/date'\nimport { useDeleteRequest, usePutRequest } from '../hooks/request'\nimport { TODO_DETAIL } from '../urls'\nimport Dropdown, { DropdownItem } from './common/Dropdown'\nimport Loader from './common/Loader'\nimport TodoUpdate from './TodoUpdate'\n\n\nexport default function TodoItem({ item, onUpdate, onDelete, index }) {\n    const update = usePutRequest({ url: TODO_DETAIL.replace('{id}', item.id) })\n    const remove = useDeleteRequest({ url: TODO_DETAIL.replace('{id}', item.id) })\n    const [showUpdate, setShowUpdate] = useState(false)\n\n\n    async function handleDelete() {\n        if (global.confirm('Вы действительно хотите удалить?')) {\n            await remove.request()\n            onDelete()\n        }\n    }\n\n    if (update.loading) return <div className=\"media\"><Loader className=\"is-size-3\" center /></div>\n\n    return (\n        <div className=\"media mx-0 my-0 pt-2\">\n\n            <div className=\"media-content\">\n                {showUpdate ? (\n                    <TodoUpdate item={item} onUpdate={onUpdate} />\n                ) : (\n                    <div style={{ display: 'flex' }} className={cn({ [css(styles.del)]: !item.isActive })}>\n                        <div className=\"is-left mr-6 mt-3\">\n                            <p className=\"title is-6\">{index + 1}</p>\n                        </div>\n                        <NavLink to={`/todo/${item.id}`}>\n                            <div className=\"is-center mr-6 mt-3\">\n                                <p className=\"title is-6 has-text-link\">{item.title}</p>\n                            </div>\n\n                        </NavLink>\n                        <div className=\"mr-6 mt-3\">\n                            <p className=\"subtitle is-7\">{getDateTime(item.createdAt)}</p>\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"media-right\">\n                <Dropdown right trigger={(\n                    <span className=\"pointer\">\n                        <ion-icon name=\"ellipsis-vertical-outline\" />\n                    </span>\n                )}>\n                    <DropdownItem text=\"Изменить\" onClick={() => setShowUpdate(!showUpdate)} />\n                    <DropdownItem text=\"Удалить\" onClick={handleDelete} />\n                </Dropdown>\n            </div>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    del: {\n        textDecoration: 'line-through',\n        display: 'flex',\n    },\n})\n","import React, { useState } from 'react'\nimport cn from 'classnames'\nimport { css, StyleSheet } from 'aphrodite'\nimport { getDateTime } from '../utils/date'\nimport { useDeleteRequest, usePutRequest } from '../hooks/request'\nimport { INCOME_DETAIL } from '../urls'\nimport Dropdown, { DropdownItem } from './common/Dropdown'\nimport Loader from './common/Loader'\nimport IncomeUpdate from './IncomeUpdate'\n\n\nexport default function IncomeItem({ item, onUpdate, onDelete, index }) {\n    const update = usePutRequest({ url: INCOME_DETAIL.replace('{id}', item.id) })\n    const remove = useDeleteRequest({ url: INCOME_DETAIL.replace('{id}', item.id) })\n    const [showUpdate, setShowUpdate] = useState(false)\n\n\n    async function handleDelete() {\n        if (global.confirm('Вы действительно хотите удалить?')) {\n            await remove.request()\n            onDelete()\n        }\n    }\n\n    if (update.loading) return <div className=\"media\"><Loader className=\"is-size-3\" center /></div>\n\n    return (\n        <div className=\"media mx-0 my-0 pt-2\">\n\n            <div className=\"media-content\">\n                {showUpdate ? (\n                    <IncomeUpdate item={item} todoId={item.id} onUpdate={onUpdate} />\n                ) : (\n                    <div style={{ display: 'flex' }} className={cn({ [css(styles.del)]: item.isActive })}>\n                        <div className=\"is-left mr-6 mt-3\">\n                            <p className=\"title is-6\">{index + 1}</p>\n                        </div>\n                        <div className=\"is-center mr-6 mt-3\">\n                            <p className=\"title is-6\">{item.title}</p>\n                        </div>\n                        <div className=\"is-center mr-6 mt-3\">\n                            <p className=\"title is-6\">{item.isNumber}</p>\n                        </div>\n                        <div className=\"mr-6 mt-3\">\n                            <p className=\"subtitle is-7\">{getDateTime(item.createdAt)}</p>\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"media-right\">\n                <Dropdown right trigger={(\n                    <span className=\"pointer\">\n                        <ion-icon name=\"ellipsis-vertical-outline\" />\n                    </span>\n                )}>\n                    <DropdownItem text=\"Изменить\" onClick={() => setShowUpdate(!showUpdate)} />\n                    <DropdownItem text=\"Удалить\" onClick={handleDelete} />\n                </Dropdown>\n            </div>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    del: {\n        textDecoration: 'line-through',\n        display: 'flex',\n    },\n})\n","import React from 'react'\nimport { usePutRequest } from '../hooks/request'\nimport { INCOME_DETAIL } from '../urls'\nimport IncomeForm from './IncomeForm'\n\n\nexport default function IncomeUpdate({ item, onUpdate }) {\n    const update = usePutRequest({ url: INCOME_DETAIL.replace('{id}', item.id) })\n\n    async function handleUpdate(data) {\n        await update.request({ data })\n        onUpdate()\n    }\n\n    return (\n        <IncomeForm item={item} onSubmit={handleUpdate} initialValues={item} />\n    )\n}\n","import React, { useState } from 'react'\nimport cn from 'classnames'\nimport { css, StyleSheet } from 'aphrodite'\nimport { getDateTime } from '../utils/date'\nimport { useDeleteRequest, usePutRequest } from '../hooks/request'\nimport { TODO_DETAIL } from '../urls'\nimport Dropdown, { DropdownItem } from './common/Dropdown'\nimport Loader from './common/Loader'\nimport TodoUpdate from './TodoUpdate'\nimport ExpensUpdate from './ExpensUpdate'\n\n\nexport default function ExpensItem({ item, onUpdate, onDelete, index }) {\n    const update = usePutRequest({ url: TODO_DETAIL.replace('{id}', item.id) })\n    const remove = useDeleteRequest({ url: TODO_DETAIL.replace('{id}', item.id) })\n    const [showUpdate, setShowUpdate] = useState(false)\n\n\n    async function handleDelete() {\n        if (global.confirm('Вы действительно хотите удалить?')) {\n            await remove.request()\n            onDelete()\n        }\n    }\n\n    if (update.loading) return <div className=\"media\"><Loader className=\"is-size-3\" center /></div>\n\n    return (\n        <div className=\"media mx-0 my-0 pt-2\">\n\n            <div className=\"media-content\">\n                {showUpdate ? (\n                    <ExpensUpdate item={item} onUpdate={onUpdate} />\n                ) : (\n                    <div style={{ display: 'flex' }} className={cn({ [css(styles.del)]: !item.isActive })}>\n                        <div className=\"is-left mr-6 mt-3\">\n                            <p className=\"title is-6\">{index + 1}</p>\n                        </div>\n                        <div className=\"is-center mr-6 mt-3\">\n                            <p className=\"title is-6\">{item.title}</p>\n                        </div>\n                        <div className=\"mr-6 mt-3\">\n                            <p className=\"subtitle is-7\">{getDateTime(item.createdAt)}</p>\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"media-right\">\n                <Dropdown right trigger={(\n                    <span className=\"pointer\">\n                        <ion-icon name=\"ellipsis-vertical-outline\" />\n                    </span>\n                )}>\n                    <DropdownItem text=\"Изменить\" onClick={() => setShowUpdate(!showUpdate)} />\n                    <DropdownItem text=\"Удалить\" onClick={handleDelete} />\n                </Dropdown>\n            </div>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    del: {\n        textDecoration: 'line-through',\n        display: 'flex',\n    },\n})\n","import React from 'react'\nimport { usePutRequest } from '../hooks/request'\nimport { EXPENS_DETAIL } from '../urls'\nimport ExpensForm from './ExpensForm'\n\n\nexport default function ExpensUpdate({ item, onUpdate }) {\n    const update = usePutRequest({ url: EXPENS_DETAIL.replace('{id}', item.id) })\n\n    async function handleUpdate(data) {\n        await update.request({ data })\n        onUpdate()\n    }\n\n    return (\n        <ExpensForm item={item} onSubmit={handleUpdate} initialValues={item} />\n    )\n}\n","import React, { useState } from 'react'\nimport cn from 'classnames'\nimport { css, StyleSheet } from 'aphrodite'\nimport { NavLink } from 'react-router-dom'\nimport { getDateTime } from '../utils/date'\nimport { useDeleteRequest, usePutRequest } from '../hooks/request'\nimport { PROJECT_DETAIL } from '../urls'\nimport Dropdown, { DropdownItem } from './common/Dropdown'\nimport Loader from './common/Loader'\nimport ProjectUpdate from './ProjectUpdate'\n\n\nexport default function ProjectItem({ item, onUpdate, onDelete, index }) {\n    const update = usePutRequest({ url: PROJECT_DETAIL.replace('{id}', item.id) })\n    const remove = useDeleteRequest({ url: PROJECT_DETAIL.replace('{id}', item.id) })\n    const [showUpdate, setShowUpdate] = useState(false)\n\n\n    async function handleDelete() {\n        if (global.confirm('Вы действительно хотите удалить?')) {\n            await remove.request()\n            onDelete()\n        }\n    }\n\n    if (update.loading) return <div className=\"media\"><Loader className=\"is-size-3\" center /></div>\n\n    return (\n        <div className=\"media mx-0 my-0 pt-2\">\n\n            <div className=\"media-content\">\n                {showUpdate ? (\n                    <ProjectUpdate item={item} onUpdate={onUpdate} />\n                ) : (\n                    <div style={{ display: 'flex' }} className={cn({ [css(styles.del)]: item.isActive })}>\n                        <div className=\"is-left mr-6 mt-3\">\n                            <p className=\"title is-6\">{index + 1}</p>\n                        </div>\n                        <div className=\"is-center mr-6 mt-3\">\n                            <p className=\"title is-6 is-link\">{item.directorName}</p>\n                        </div>\n                        <div className=\"is-center mr-6 mt-3\">\n                            <p className=\"title is-6 is-link\">{item.incomeMonth}</p>\n                        </div>\n                        <div className=\"is-center mr-6 mt-3\">\n                            <p className=\"title is-6 is-link\">{item.clientNumber}</p>\n                        </div>\n                        <div className=\"is-center mr-6 mt-3\">\n                            <p className=\"title is-6 is-link\">{item.salary}</p>\n                        </div>\n                        <div className=\"is-center mr-6 mt-3\">\n                            <p className=\"title is-6 is-link\">{item.bannerNumber}</p>\n                        </div>\n                        <div className=\"is-center mr-6 mt-3\">\n                            <p className=\"title is-6 is-link\">{item.projectName}</p>\n                        </div>\n\n                        <div className=\"mr-6 mt-3\">\n                            <p className=\"subtitle is-7\">{getDateTime(item.createdAt)}</p>\n                        </div>\n                    </div>\n                )}\n            </div>\n\n\n            <div className=\"media-right\">\n                <Dropdown right trigger={(\n                    <span className=\"pointer\">\n                        <ion-icon name=\"ellipsis-vertical-outline\" />\n                    </span>\n                )}>\n                    <DropdownItem text=\"Изменить\" onClick={() => setShowUpdate(!showUpdate)} />\n                    <DropdownItem text=\"Удалить\" onClick={handleDelete} />\n                </Dropdown>\n            </div>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    del: {\n        textDecoration: 'line-through',\n        display: 'flex',\n    },\n})\n","import React from 'react'\nimport { usePutRequest } from '../hooks/request'\nimport { PROJECT_DETAIL } from '../urls'\nimport ProjectForm from './ProjectForm'\n\n\nexport default function ProjectUpdate({ item, onUpdate }) {\n    const update = usePutRequest({ url: PROJECT_DETAIL.replace('{id}', item.id) })\n\n    async function handleUpdate(data) {\n        await update.request({ data })\n        onUpdate()\n    }\n\n    return (\n        <ProjectForm item={item} onSubmit={handleUpdate} initialValues={item} />\n    )\n}\n","import { StyleSheet, css } from 'aphrodite'\nimport React from 'react'\nimport cn from 'classnames'\n\nexport default function Button({ text, onClick, loading, className, icon, type = 'button', ...rest }) {\n    return (\n        <button\n            onClick={onClick}\n            type={type}\n            className={cn('button', className, { 'is-loading': loading })}\n            {...rest}>\n\n            {icon ? <span className={text ? css(styles.icon) : ''}><ion-icon name={icon} /></span> : null }\n            {text}\n        </button>\n    )\n}\n\nconst styles = StyleSheet.create({\n    icon: {\n        marginRight: '0.2rem',\n    },\n})\n","export function auth() {\n    return {\n        headers: {\n            Authorization: `Token ${localStorage.token}`,\n        },\n    }\n}\n\nlet permissions\n\nexport function checkPermission(permission) {\n    if (!permissions) {\n        permissions = JSON.parse(localStorage.getItem('permissions'))\n    }\n\n    return permissions.includes(permission)\n}\n\n\nexport function clearPermissions() {\n    permissions = undefined\n}\n\nexport function signin({ user, token, permissions: userPermissions }, history) {\n    localStorage.setItem('user', JSON.stringify(user))\n    localStorage.setItem('token', token)\n    localStorage.setItem('language', 'ru')\n    localStorage.setItem('permissions', JSON.stringify(userPermissions))\n    history.push('/')\n}\n\nexport function signOut(history) {\n    localStorage.removeItem('user')\n    localStorage.removeItem('token')\n    localStorage.removeItem('permissions')\n    clearPermissions()\n    history.push('/')\n}\n\nexport function isAuthenticated() {\n    return localStorage.getItem('user')\n        && localStorage.getItem('token')\n        && localStorage.getItem('permissions')\n}\n","import React from 'react'\nimport { StyleSheet, css } from 'aphrodite'\nimport cn from 'classnames'\n\nexport default function Loader({ large, center, className, padded = false, show = true }) {\n    const classes = cn(className, 'loader', {\n        'is-size-1': large,\n        [css(styles.center)]: center,\n        [css(styles.padded)]: padded,\n    })\n    return show ? <span className={classes} /> : null\n}\n\nconst styles = StyleSheet.create({\n    center: { margin: '0 auto' },\n    padded: { marginTop: '2rem', marginBottom: '2rem' },\n})\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react'\nimport cn from 'classnames'\nimport { NavLink } from 'react-router-dom'\n\nexport default function Dropdown({ trigger, children, right }) {\n    const [active, setActive] = useState(false)\n\n    return (\n        <div onMouseLeave={() => setActive(false)}\n            className={cn('dropdown', { 'is-active': active, 'is-right': right })}>\n            <div className=\"dropdown-trigger\" onClick={() => setActive(!active)}>\n                {trigger}\n            </div>\n\n            {active ? (\n                <div className=\"dropdown-menu\">\n                    <div className=\"dropdown-content\">{children}</div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\n\nexport function DropdownItem({ text, icon, active, to, onClick, ...props }) {\n    const Component = to ? NavLink : 'a'\n\n    return (\n        <Component {...props} to={to} className={cn('dropdown-item', { 'is-active': active })} onClick={onClick}>\n            {icon ? <span className={cn('icon', icon)} /> : null}\n            {text}\n        </Component>\n    )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n\nexport default function ProtectedRoute({ component: Component, ...rest }) {\n    function render(props) {\n        if (!localStorage.token || !localStorage.user || !localStorage.permissions) {\n            return <Redirect to=\"/\" />\n        }\n        return <Component {...props} />\n    }\n\n    return <Route {...rest} component={render} />\n}\n","import React, { Fragment } from 'react'\n\nfunction ErrorItem({ field, error }) {\n    if (field === 'nonFieldErrors' || field === 'detail') {\n        return <li><strong>{error}</strong></li>\n    }\n\n    return (\n        <li>\n            <strong>{field}: </strong>\n            {error[0]}\n        </li>\n    )\n}\n\nexport default function ServerError({ error }) {\n    if (!error || !error.data) return <Fragment />\n\n    return (\n        <div className=\"message is-danger\">\n            <div className=\"message-body\">\n                <ul>\n                    {typeof error.data === 'string' ? (\n                        <ErrorItem field=\"detail\" error='Ошибка сервера' />\n                    ) : Object.keys(error.data).map((key) => (\n                        <ErrorItem key={key} field={key} error={error.data[key]} />\n                    ))}\n                </ul>\n            </div>\n        </div>\n    )\n}\n","import cn from 'classnames'\nimport React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { css, StyleSheet } from 'aphrodite'\nimport isEmpty from 'lodash/isEmpty'\nimport Button from '../components/common/Button'\nimport Loader from '../components/common/Loader'\nimport ServerError from '../components/common/ServerError'\nimport { useLoad } from '../hooks/request'\nimport { CONFIRM } from '../urls'\nimport successImg from '../static/success.png'\nimport { signin } from '../utils/auth'\n\n\nexport default function ConfirmEmail() {\n    const history = useHistory()\n    const { confirmationCode } = useParams()\n\n    const { response, loading, error } = useLoad({\n        method: 'POST',\n        url: CONFIRM.replace('{confirmationCode}', confirmationCode),\n        data: { confirmationCode },\n        headers: {},\n    })\n\n    if (loading) {\n        return <Loader large center padded />\n    }\n\n    return (\n        <div className=\"column\">\n            <div className=\"container\">\n                {!isEmpty(error) ? (\n                    <ServerError error={error} />\n                ) : (\n                    <div>\n                        <img className={cn('columns', css(styles.img))} src={successImg} alt=\"success\" />\n\n                        <Button\n                            text=\"Войти в систему\"\n                            onClick={() => signin(response, history)}\n                            type=\"submit\"\n                            icon=\"checkmark\"\n                            className={cn('columns', css(styles.button))} />\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    img: {\n        width: '650px',\n        margin: '0 auto',\n    },\n    button: {\n        margin: '0 auto',\n        background: 'hsl(217, 71%, 53%)',\n        color: 'white',\n    },\n})\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport notFound from '../static/not_found.svg'\n\nexport default function NotFound() {\n    return (\n        <div className={css(styles.body)}>\n            <img src={notFound} alt=\"404\" className={css(styles.image)} />\n            <p className={css(styles.string)}>\n                Упс! Страница не найдена\n            </p>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    body: {\n        height: '100vh',\n        textAlign: 'center',\n    },\n    image: {\n        margin: '5rem auto',\n        width: '40rem',\n    },\n    string: {\n        fontSize: '3rem',\n    },\n})\n","import cn from 'classnames'\nimport React, { useState } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport Input from './Input'\n\nexport default function Password({ name, validate, placeholder, label }) {\n    const [showPassword, setShowPassword] = useState(false)\n\n    return (\n        <div className=\"field\">\n            <div className=\"control has-icons-right\">\n                <Input\n                    name={name}\n                    validate={validate}\n                    label={label}\n                    placeholder={placeholder}\n                    type={showPassword ? 'text' : 'password'} />\n\n                <span className={cn('icon is-right', css(styles.showPassword), { [css(styles.hasLabel)]: label })}>\n                    <ion-icon name={showPassword ? 'eye-off' : 'eye'} onClick={() => setShowPassword(!showPassword)} />\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    showPassword: {\n        pointerEvents: 'auto',\n        color: 'black',\n    },\n    hasLabel: {\n        marginTop: '25px',\n    },\n})\n","import { css, StyleSheet } from 'aphrodite'\nimport React from 'react'\nimport cn from 'classnames'\n\n\nexport default function LayoutAuth({ children, sidebar }) {\n    return (\n        <div className=\"login-wrapper columns is-gapless\">\n            <div className=\"column is-7\">\n                <div className=\"hero form-hero is-fullheight\">\n                    <div className=\"hero-body px-0 py-0\">\n                        <div className={css(styles.formWrapper)}>\n                            <div className=\"px-4 py-4\">\n                                {children}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className={cn(\n                'column is-5 is-hidden-mobile hero-banner', css(styles.sidebar),\n            )}>\n                <div className=\"hero is-fullheight\">\n                    <div className=\"hero-body\">\n                        <div className=\"container has-text-centered has-text-white\">\n                            <div className=\"columns\">\n                                <div className=\"column is-10 is-offset-1\">\n                                    {sidebar}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    sidebar: {\n        backgroundColor: '#37b54c !important',\n    },\n    formWrapper: {\n        maxWidth: '540px',\n        minWidth: '380px',\n        margin: '0 auto',\n    },\n})\n","import { css, StyleSheet } from 'aphrodite'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { NavLink, Redirect, useHistory } from 'react-router-dom'\nimport Button from '../components/common/Button'\nimport Input from '../components/common/Input'\nimport ServerError from '../components/common/ServerError'\nimport { usePostRequest } from '../hooks/request'\nimport { SIGNIN } from '../urls'\nimport { email, required, validator } from '../utils/validators'\nimport Password from '../components/common/Password'\nimport { isAuthenticated, signin } from '../utils/auth'\nimport LayoutAuth from '../components/LayoutAuth'\n\n\nexport default function Login() {\n    const history = useHistory()\n    const signIn = usePostRequest({ url: SIGNIN, headers: {} })\n\n    if (isAuthenticated()) {\n        return <Redirect to=\"/project\" />\n    }\n\n    async function onSubmit(data) {\n        const { response, success } = await signIn.request({ data })\n\n        if (success) {\n            signin(response, history)\n            history.push('project')\n        }\n    }\n\n    return (\n        <LayoutAuth sidebar={(\n            <div>\n                <h2 className=\"is-size-5 has-text-weight-bold\">Еще нет аккаунта?</h2>\n                <p>Если вы еще не зарегистрировались переходите по ссылке и создайте аккаунт</p>\n\n                <br />\n\n                <NavLink to=\"/sign-up\" className=\"button is-link is-outlined is-inverted\">\n                    Создать аккаунт\n                </NavLink>\n            </div>\n        )}>\n\n            <div className=\"has-text-centered\">\n                <h2 className=\"is-size-4 has-text-weight-bold\">Войдите в систему</h2>\n                <br />\n            </div>\n\n            <Formik onSubmit={onSubmit} initialValues={{ email: '', password: '' }}>\n                <Form>\n                    <ServerError error={signIn.error} />\n                    <Input name=\"email\" validate={validator(required, email)} placeholder=\"Email\" />\n                    <Password name=\"password\" validate={required} placeholder=\"Password\" />\n\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <Button\n                                loading={signIn.loading}\n                                className=\"is-primary is-blue is-medium is-fullwidth\"\n                                text=\"Войти\"\n                                type=\"submit\" />\n                        </div>\n                    </div>\n                    <div className={css(styles.onlyMobile)}>\n                        <NavLink to=\"/sign-up\">Зарегистрироваться</NavLink>\n                        <br />\n                        <br />\n                    </div>\n\n                    <div className=\"mt-5 forgot-password\">\n                        <div className=\"has-text-centered\">\n                            <NavLink to=\"/reset-link\" className={css(styles.forgotPassword)}>Забыли пароль?</NavLink>\n                        </div>\n                    </div>\n                </Form>\n            </Formik>\n        </LayoutAuth>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        padding: '1.25rem',\n    },\n    img: {\n        width: '10rem',\n    },\n    input: {\n        color: '#4a4a4a',\n    },\n    onlyMobile: {\n        textAlign: 'center',\n        '@media (min-width: 769px)': {\n            display: 'none',\n        },\n    },\n    forgotPassword: {\n        color: '#999',\n        fontSize: '.9rem',\n        ':hover': {\n            color: '#0062ff',\n        },\n    },\n})\n","import { css, StyleSheet } from 'aphrodite'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport Button from '../components/common/Button'\nimport Input from '../components/common/Input'\nimport ServerError from '../components/common/ServerError'\nimport { usePostRequest } from '../hooks/request'\nimport { SIGNUP } from '../urls'\nimport { email, required, validator } from '../utils/validators'\nimport Password from '../components/common/Password'\nimport LayoutAuth from '../components/LayoutAuth'\n\nexport default function SignUp() {\n    const signUp = usePostRequest({ url: SIGNUP, headers: {} })\n    const history = useHistory()\n\n    async function onSubmit(data) {\n        const { success } = await signUp.request({ data })\n\n        if (success) {\n            history.push('/email-confirmation-message')\n        }\n    }\n\n    return (\n        <LayoutAuth sidebar={(\n            <div>\n                <h2 className=\"is-size-5 has-text-weight-bold\">Уже есть аккаунт?</h2>\n                <p>Вы уже зарегистрированы в Admin.tech? Войдите в систему и наслаждайтесь</p>\n\n                <br />\n\n                <NavLink to=\"\" className=\"button is-link is-outlined is-inverted\">\n                    Войти в систему\n                </NavLink>\n            </div>\n        )}>\n            <div className=\"has-text-centered\">\n                <h2 className=\"is-size-4 has-text-weight-bold\">Зарегистрироваться</h2>\n                <br />\n            </div>\n\n            <Formik onSubmit={onSubmit}\n                initialValues={{\n                    password: '',\n                    firstName: '',\n                    lastName: '',\n                    email: '',\n                    companyName: '',\n                    companyPhone: '',\n                }}>\n                <Form className={css(styles.container)}>\n                    <ServerError error={signUp.error} />\n\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-body\">\n                            <Input name=\"firstName\" label=\"Имя\" validate={required} placeholder=\"Игорь\" />\n                            <Input name=\"lastName\" label=\"Фамилия\" validate={required} placeholder=\"Игорьев\" />\n                        </div>\n                    </div>\n\n                    <Input\n                        name=\"email\"\n                        label=\"Электронная почта\"\n                        validate={validator(required, email)}\n                        placeholder=\"admin@gmail.com\" />\n\n                    <Password name=\"password\" validate={required} placeholder=\"********\" label=\"Пароль\" />\n\n                    <div className=\"field\">\n                        <p className=\"control\">\n                            <Button\n                                loading={signUp.loading}\n                                className=\"is-primary is-blue is-medium is-fullwidth\"\n                                text=\"Зарегистрироваться\"\n                                type=\"submit\" />\n                        </p>\n                    </div>\n\n                    <div className={css(styles.onlyMobile)}>\n                        <br />\n                        Уже есть аккаунт?\n                        <NavLink to=\"\" className={css(styles.isRegistered)}> Войти</NavLink>\n                    </div>\n                </Form>\n            </Formik>\n        </LayoutAuth>\n    )\n}\n\nconst styles = StyleSheet.create({\n    img: {\n        width: '10rem',\n    },\n    onlyMobile: {\n        fontSize: '.9rem',\n        textAlign: 'center',\n        '@media (min-width: 769px)': {\n            display: 'none',\n        },\n    },\n    isRegistered: {\n        color: '#999',\n        ':hover': {\n            color: '#0062ff',\n        },\n    },\n})\n","import { css, StyleSheet } from 'aphrodite'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Button from '../components/common/Button'\nimport Input from '../components/common/Input'\nimport ServerError from '../components/common/ServerError'\nimport { useMessage } from '../hooks/message'\nimport { RESET_PASSWORD } from '../urls'\nimport { required } from '../utils/validators'\nimport { usePutRequest } from '../hooks/request'\nimport { signin } from '../utils/auth'\n\n\nexport default function ResetPassword() {\n    const resetPassword = usePutRequest({ url: RESET_PASSWORD, headers: {} })\n    const [showMessage] = useMessage()\n    const { key } = useParams()\n    const history = useHistory()\n\n    async function onSubmit(data) {\n        if (data.password === data.confirmPassword) {\n            const { response, success } = await resetPassword.request({ data: { password: data.password, key } })\n            if (success) {\n                showMessage('Ваш пароль быль успешно изменён', 'is-success')\n                signin(response, history)\n            }\n        } else {\n            showMessage('Введенные пароли не совпадают', 'is-danger')\n        }\n    }\n\n    return (\n        <Formik onSubmit={onSubmit} initialValues={{ password: '', confirmPassword: '' }}>\n            <Form className={css(styles.container)}>\n                <div className=\"columns\">\n                    <h1 className=\"title column\">Изменить пароль</h1>\n                </div>\n\n                <ServerError error={resetPassword.error} />\n\n                <Input\n                    name=\"password\"\n                    label=\"Новый Пароль\"\n                    validate={required}\n                    placeholder=\"********\"\n                    type=\"password\" />\n\n                <Input\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    label=\"Повторите пароль\"\n                    placeholder=\"********\"\n                    validate={required} />\n\n                <div className=\"field\">\n                    <p className=\"control\">\n                        <Button\n                            loading={resetPassword.loading}\n                            className=\"is-link\"\n                            text=\"Изменить и Войти\"\n                            type=\"submit\" />\n                    </p>\n                </div>\n            </Form>\n        </Formik>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        margin: '10rem auto',\n        width: '30rem',\n    },\n})\n","import { css, StyleSheet } from 'aphrodite'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport Button from '../components/common/Button'\nimport Input from '../components/common/Input'\nimport ServerError from '../components/common/ServerError'\nimport { usePostRequest } from '../hooks/request'\nimport { RESET_LINK } from '../urls'\nimport { email, required, validator } from '../utils/validators'\nimport LayoutAuth from '../components/LayoutAuth'\n\n\nexport default function ResetLink() {\n    const resetLink = usePostRequest({ url: RESET_LINK, headers: {} })\n    const history = useHistory()\n\n    async function onSubmit(data) {\n        const { success } = await resetLink.request({ data })\n\n        if (success) {\n            history.push('/reset-password-message')\n        }\n    }\n\n    return (\n        <LayoutAuth sidebar={(\n            <div>\n                <h2 className=\"is-size-5 has-text-weight-bold\">Уже есть аккаунт?</h2>\n                <p>Вы уже зарегистрированы в MondayLabs.tech? Войдите в систему и наслаждайтесь</p>\n\n                <br />\n\n                <NavLink to=\"\" className=\"button is-link is-outlined is-inverted\">\n                    Войти в систему\n                </NavLink>\n            </div>\n        )}>\n\n            <div className=\"has-text-centered\">\n                <h2 className=\"is-size-4 has-text-weight-bold\">Восстановление пароля</h2>\n                <br />\n            </div>\n\n            <Formik onSubmit={onSubmit} initialValues={{ email: '' }}>\n                <Form className={css(styles.container)}>\n                    <ServerError error={resetLink.error} />\n\n                    <Input\n                        name=\"email\"\n                        label=\"Емайл адрес\"\n                        validate={validator(required, email)}\n                        placeholder=\"amdin@gmail.com\" />\n\n                    <div className=\"field columns\">\n                        <p className=\"control column\">\n                            <Button\n                                loading={resetLink.loading}\n                                className=\"is-primary is-blue is-medium is-fullwidth\"\n                                text=\"Восстановить пароль\"\n                                type=\"submit\" />\n                        </p>\n                    </div>\n\n                    <div className={css(styles.onlyMobile)}>\n                        <br />\n                        Уже есть аккаунт?\n                        <NavLink to=\"\" className={css(styles.isRegistered)}> Войти</NavLink>\n                    </div>\n                </Form>\n            </Formik>\n        </LayoutAuth>\n    )\n}\n\nconst styles = StyleSheet.create({\n    img: {\n        width: '10rem',\n    },\n    onlyMobile: {\n        fontSize: '.9rem',\n        textAlign: 'center',\n        '@media (min-width: 769px)': {\n            display: 'none',\n        },\n    },\n    isRegistered: {\n        color: '#999',\n        ':hover': {\n            color: '#0062ff',\n        },\n    },\n})\n","import React from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport sendMessage from '../static/send_message.png'\n\nexport default function ResetPasswordMessage() {\n    return (\n        <div className={css(styles.container)}>\n            <img className={css(styles.img)} src={sendMessage} alt=\"\" />\n            <p className={css(styles.text)}>\n                <span className=\"is-size-3-desktop is-size-4-mobile\">Сообщение отправлено!</span><br />\n                Мы отправили на вашу почту ссыльку для измененя пароля перейдите по ней и измените пароль\n            </p>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        margin: '3rem auto 0rem',\n        maxWidth: '50rem',\n    },\n    img: {\n        width: '100%',\n        margin: '0 auto',\n    },\n    text: {\n        margin: '0 auto',\n        padding: '3rem 2rem',\n        '@media (min-width: 769px)': {\n            padding: '3rem 7rem',\n        },\n    },\n})\n","import React from 'react'\nimport { css, StyleSheet } from 'aphrodite'\nimport sendMessage from '../static/send_message.png'\n\nexport default function EmailConfirmationMessage() {\n    return (\n        <div className={css(styles.container)}>\n            <img className={css(styles.img)} src={sendMessage} alt=\"\" />\n\n            <p className={css(styles.text)}>\n                <span className=\"is-size-3-desktop is-size-4-mobile\">Сообщение отправлено!</span><br />\n                Для подтверждения вашего адреса электронной почты, мы отправили вам письмо с активационной ссылкой.\n                <br /><br />\n                Не забудьте проверить папку \"Спам\"\n            </p>\n        </div>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        margin: '3rem auto 0rem',\n        maxWidth: '50rem',\n    },\n    img: {\n        width: '100%',\n        margin: '0 auto',\n    },\n    text: {\n        margin: '0 auto',\n        padding: '3rem 2rem',\n        '@media (min-width: 769px)': {\n            padding: '3rem 7rem',\n        },\n    },\n})\n","import React from 'react'\nimport { usePostRequest } from '../hooks/request'\nimport { TODO_LIST } from '../urls'\nimport { auth } from '../utils/auth'\nimport TodoForm from './TodoForm'\n\n\nexport default function TodoCreate({ onSuccess }) {\n    const create = usePostRequest({ url: TODO_LIST, ...auth() })\n\n    async function onCreate(data) {\n        await create.request({ data })\n        onSuccess()\n    }\n\n    return (\n        <TodoForm onSubmit={onCreate} loading={create.loading} />\n    )\n}\n","import React from 'react'\nimport { useLoad } from '../hooks/request'\nimport { TODO_LIST } from '../urls'\nimport TodoItem from '../components/TodoItem'\nimport Loader from '../components/common/Loader'\nimport TodoCreate from '../components/TodoCreate'\n\nexport default function Todo() {\n    const todos = useLoad({ url: TODO_LIST }, [])\n\n    return (\n        <div className=\"has-background-grey-lighter is-fullheight\">\n            <div className=\"container mb-1\">\n                <h1 className=\"has-text-centered is-size-3\">Hisobotlar</h1>\n\n                <div className=\"box\">\n                    {!todos.loading ? (\n                        <div>\n                            <TodoCreate onSuccess={todos.request} />\n\n                            {todos.response ? todos.response.map((item, index) => (\n                                <TodoItem\n                                    index={index}\n                                    item={item}\n                                    key={item.id}\n                                    onUpdate={todos.request}\n                                    onDelete={todos.request} />\n                            )) : <div className=\"has-text-centered is-size-2\">Пусто</div>}\n                        </div>\n                    ) : <Loader large center />}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { usePostRequest } from '../hooks/request'\nimport { EXPENS_LIST, INCOME_LIST } from '../urls'\nimport { auth } from '../utils/auth'\nimport IncomeForm from './IncomeForm'\n\n\nexport default function IncomeCreate({ onSuccess, todo }) {\n    const create = usePostRequest({ url: INCOME_LIST, params: { todo }, ...auth() })\n\n    async function onCreate(data) {\n        await create.request({ data: { ...data, todo } })\n        onSuccess()\n    }\n\n    return (\n        <IncomeForm onSubmit={onCreate} loading={create.loading} />\n    )\n}\n","import React from 'react'\nimport { usePostRequest } from '../hooks/request'\nimport { EXPENS_LIST } from '../urls'\nimport { auth } from '../utils/auth'\nimport ExpensForm from './ExpensForm'\n\n\nexport default function ExpensCreate({ onSuccess, todo }) {\n    const create = usePostRequest({ url: EXPENS_LIST, params: { todo }, ...auth() })\n\n    async function onCreate(data) {\n        await create.request({ data: { ...data, todo } })\n        onSuccess()\n    }\n\n    return (\n        <ExpensForm onSubmit={onCreate} loading={create.loading} />\n    )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useLoad } from '../hooks/request'\nimport { EXPENS_LIST, INCOME_LIST, TODO_DETAIL } from '../urls'\nimport IncomeCreate from '../components/IncomeCreate'\nimport ExpensCreate from '../components/ExpensCreate'\nimport IncomeItem from '../components/IncomeItem'\nimport Loader from '../components/common/Loader'\nimport ExpensItem from '../components/ExpensItem'\n\nexport default function TodoDetail() {\n    const { id } = useParams()\n    const todoDetail = useLoad({ url: TODO_DETAIL.replace('{id}', id) }, [id])\n    const incomes = useLoad({ url: INCOME_LIST, params: { todo: id } })\n\n    const expens = useLoad({ url: EXPENS_LIST, params: { todo: id } })\n    return (\n        <div className=\"has-background-grey-lighter is-fullheight\">\n            <div className=\"container mb-1\">\n                <h1 className=\"has-text-centered is-size-3\">Daromad</h1>\n                <div className=\"box\">\n                    {!incomes.loading ? (\n                        <div>\n                            <IncomeCreate todo={todoDetail.response ? todoDetail.response.id : ''}\n                                onSuccess={incomes.request} />\n                            {incomes.response ? incomes.response.map((item, index) => (\n                                <IncomeItem\n                                    index={index}\n                                    item={item}\n                                    key={item.id}\n                                    onUpdate={incomes.request}\n                                    onDelete={incomes.request} />\n                            )) : <div className=\"has-text-centered is-size-2\">Пусто</div>}\n                        </div>\n                    ) : <Loader large center />}\n                </div>\n            </div>\n            <div className=\"container mb-1\">\n                <h1 className=\"has-text-centered is-size-3\">Xarajatlar</h1>\n                <div className=\"box\">\n                    {!expens.loading ? (\n                        <div>\n                            <ExpensCreate\n                                todo={todoDetail.response ? todoDetail.response.id : ''}\n                                onSuccess={expens.request} />\n                            {expens.response ? expens.response.map((item, index) => (\n                                <ExpensItem\n                                    index={index}\n                                    item={item}\n                                    key={item.id}\n                                    onUpdate={expens.request}\n                                    onDelete={expens.request} />\n                            )) : <div className=\"has-text-centered is-size-2\">Пусто</div>}\n                        </div>\n                    ) : <Loader large center />}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { usePostRequest } from '../hooks/request'\nimport { PROJECT_LIST } from '../urls'\nimport { auth } from '../utils/auth'\nimport ProjectForm from './ProjectForm'\n\n\nexport default function ProjectCreate({ onSuccess }) {\n    const create = usePostRequest({ url: PROJECT_LIST, ...auth() })\n\n    async function onCreate(data) {\n        await create.request({ data })\n        onSuccess()\n    }\n\n    return (\n        <ProjectForm onSubmit={onCreate} loading={create.loading} />\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { useLoad } from '../hooks/request'\nimport { PROJECT_LIST } from '../urls'\nimport Loader from '../components/common/Loader'\nimport ProjectItem from '../components/ProjectItem'\nimport ProjectCreate from '../components/ProjectCreate'\nimport Button from '../components/common/Button'\n\nexport default function Project() {\n    const projects = useLoad({ url: PROJECT_LIST }, [])\n\n    return (\n        <div className=\"has-background-grey-lighter is-fullheight\">\n            <div className=\"container mb-1\">\n                <div className=\"level\">\n                    <h1 className=\"has-text-centered is-size-3\">Hisobotlar</h1>\n\n                    <NavLink to=\"/todo\">\n                        <Button\n                            className=\"has-text-right is-size-6 is-link mt-1\"\n                            text=\"Loyiha qo'shish\" />\n                    </NavLink>\n                </div>\n                <div className=\"box\">\n                    {!projects.loading ? (\n                        <div>\n                            <ProjectCreate onSuccess={projects.request} />\n                            {projects.response ? projects.response.map((item, index) => (\n                                <ProjectItem\n                                    index={index}\n                                    item={item}\n                                    key={item.id}\n                                    onUpdate={projects.request}\n                                    onDelete={projects.request} />\n                            )) : <div className=\"has-text-centered is-size-2\">Пусто</div>}\n                        </div>\n                    ) : <Loader large center />}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport ProtectedRoute from './components/common/ProtectedRoute'\nimport ConfirmEmail from './pages/ConfirmEmail'\nimport NotFound from './pages/NotFound'\nimport Login from './pages/Login'\nimport SignUp from './pages/SignUp'\nimport ResetPassword from './pages/ResetPassword'\nimport ResetLink from './pages/ResetLink'\nimport ResetPasswordMessage from './pages/ResetPasswordMessage'\nimport BaseContextWrapper from './components/common/BaseContext'\nimport EmailConfirmationMessage from './pages/EmailConfirmationMessage'\nimport Todo from './pages/Todo'\nimport TodoDetail from './pages/TodoDetail'\nimport Project from './pages/Project'\n\n\nexport default function App() {\n    return (\n        <BrowserRouter>\n            <BaseContextWrapper>\n                <Switch>\n                    <ProtectedRoute path=\"/todo\" component={Todo} exact />\n                    <ProtectedRoute path=\"/todo/:id\" component={TodoDetail} exact />\n                    <ProtectedRoute path=\"/project\" component={Project} exact />\n                    <Route path=\"/\" name=\"auth\" component={Login} exact />\n                    <Route path=\"/sign-up\" name=\"auth\" component={SignUp} exact />\n                    <Route path=\"/email-confirmation-message\" component={EmailConfirmationMessage} exact />\n                    <Route path=\"/reset-password/:key\" name=\"auth\" component={ResetPassword} exact />\n                    <Route path=\"/reset-link\" name=\"auth\" component={ResetLink} exact />\n                    <Route path=\"/confirm/:confirmationCode\" component={ConfirmEmail} exact />\n                    <Route path=\"/reset-password-message\" component={ResetPasswordMessage} exact />\n                    <Route path=\"\" component={NotFound} exact />\n                </Switch>\n            </BaseContextWrapper>\n        </BrowserRouter>\n    )\n}\n","import 'bulma/css/bulma.css'\nimport './static/styles.css'\nimport * as Sentry from '@sentry/browser'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport moment from 'moment'\nimport App from './Router'\nimport 'moment/locale/ru'\n\nmoment.locale('ru')\n\nSentry.init({ dsn: process.env.REACT_APP_SENTRY_TOKEN })\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import moment from 'moment'\nimport filter from 'lodash/filter'\n\nexport const DATE_FORMAT = 'DD-MM-YYYY'\nexport const DATE_AUTO_FORMAT = 'YYYY-MM-DD'\nexport const DATETIME_FORMAT = 'DD.MM.YYYY, HH:mm'\n\nexport const DAYS = [\n    { key: 'monday', title: 'Понедельник', shortTitle: 'Пн' },\n    { key: 'tuesday', title: 'Вторник', shortTitle: 'Вт' },\n    { key: 'wednesday', title: 'Среда', shortTitle: 'Ср' },\n    { key: 'thursday', title: 'Четверг', shortTitle: 'Чт' },\n    { key: 'friday', title: 'Пятница', shortTitle: 'Пт' },\n    { key: 'saturday', title: 'Суббота', shortTitle: 'Сб' },\n    { key: 'sunday', title: 'Воскресенье', shortTitle: 'Вс' },\n]\n\nexport function day(dayKey) {\n    return filter(DAYS, { key: dayKey })[0]\n}\n\nexport function getMonth(date = new Date(), withYear = false) {\n    const format = withYear ? 'MMMM YYYY' : 'MMMM'\n    const month = moment(date).format(format)\n    return (month)[0].toUpperCase() + (month).slice(1)\n}\n\nexport function getDay(date = new Date(), withYear = false) {\n    const format = withYear ? 'DD MMMM YYYY' : 'DD'\n    const days = moment(date).format(format)\n    return (days)[0].toUpperCase() + (days).slice(1)\n}\n\nexport function getDateTime(date = new Date()) {\n    return moment(date).format(DATETIME_FORMAT)\n}\n\nexport function getDate(date = new Date()) {\n    return moment(date).format(DATE_FORMAT)\n}\n\nexport function getDateOtherFormat(date = new Date()) {\n    return moment(date).format(DATE_AUTO_FORMAT)\n}\n","export const SIGNIN = '/users/sign-in'\n\nexport const SIGNUP = '/users/sign-up'\n\nexport const SIGNOUT = '/users/sign-out'\n\nexport const USER_SETTINGS = '/users/user_settings'\n\nexport const CHANGE_PASSWORD = '/users/change_password'\n\nexport const CONFIRM = '/users/confirm'\n\nexport const RESET_PASSWORD = '/users/reset_password'\nexport const RESET_LINK = '/users/reset_link'\n\nexport const USERS_LIST = '/users/user'\nexport const REFRESH = '/users/refresh'\n\nexport const PROJECT_LIST = '/todo/project'\nexport const PROJECT_DETAIL = '/todo/project/{id}'\n\nexport const TODO_LIST = '/todo/todo'\nexport const TODO_DETAIL = '/todo/todo/{id}'\n\nexport const INCOME_LIST = '/todo/income'\nexport const INCOME_DETAIL = '/todo/income/{id}'\n\nexport const EXPENS_LIST = '/todo/expens'\nexport const EXPENS_DETAIL = '/todo/expens/{id}'\n\nconst backendUrl = process.env.REACT_APP_BASE_URL || `${window.location.protocol}//${window.location.hostname}`\nexport const domain = backendUrl.endsWith('/') ? backendUrl.substr(0, backendUrl.length - 1) : backendUrl\n","import axios from 'axios'\nimport humps from 'humps'\nimport { domain } from '../urls'\n\n//  Add Base URL and change snake_case to camelCase\nconst baseAxios = axios.create({\n    baseURL: `${domain}/api/v1/`,\n    transformResponse: [\n        ...axios.defaults.transformResponse,\n        humps.camelizeKeys,\n    ],\n    transformRequest: [\n        decamelize,\n        ...axios.defaults.transformRequest,\n    ],\n})\n\nbaseAxios.interceptors.request.use((config) => ({\n    ...config,\n    params: humps.decamelizeKeys(config.params),\n}))\n\nexport default baseAxios\n\n// eslint-disable-next-line consistent-return\nfunction decamelize(object) {\n    if (!(object && !(object instanceof File))) return object\n\n    if (object instanceof FormData) {\n        const formData = new FormData()\n        // eslint-disable-next-line no-restricted-syntax\n        for (const [key, value] of object.entries()) {\n            formData.append(humps.decamelize(key), value)\n        }\n        return formData\n    }\n\n    if (typeof object === 'object') {\n        return Object.keys(object).reduce((acc, next) => ({\n            ...acc,\n            [humps.decamelize(next)]: object[next],\n        }), {})\n    }\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { auth, signOut } from '../utils/auth'\nimport baseAxios from '../utils/request'\nimport { useMessage } from './message'\n\n\nexport function usePostRequest(options = {}) {\n    return useRequest({ method: 'POST', ...options })\n}\n\nexport function usePutRequest(options = {}) {\n    return useRequest({ method: 'PUT', ...options })\n}\n\nexport function useGetRequest(options = {}) {\n    return useRequest({ method: 'GET', ...options })\n}\n\nexport function useDeleteRequest(options = {}) {\n    return useRequest({ method: 'DELETE', ...options })\n}\n\nexport function useRequest(options = {}) {\n    const [response, setResponse] = useState()\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState({})\n    const [showMessage] = useMessage()\n\n    const history = useHistory()\n\n    async function request(overrideOptions = {}, sync = false) {\n        setLoading(true)\n\n        try {\n            const { data } = await baseAxios({ ...auth(), ...options, ...overrideOptions })\n            if (!sync) setResponse(data)\n            return { response: data, success: true }\n        } catch (e) {\n            setError(e.response || {})\n            if (e.response === undefined) {\n                showMessage('Проверьте интернет соединение', 'is-danger')\n            } else if (e.response.status >= 500) {\n                showMessage('Ошибка сервера.', 'is-danger')\n            } else if (e.response.status === 401 && e.response.data.logout) {\n                signOut(history)\n            }\n\n            return { error: e.response, success: false }\n        } finally {\n            if (!sync) setLoading(false)\n        }\n    }\n\n    return { loading, request, error, response, setResponse, setError, setLoading }\n}\n\nexport function useLoad(options, dependencies = []) {\n    const request = useRequest({ method: 'GET', ...options })\n\n    useEffect(() => {\n        request.request()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, dependencies)\n\n    return request\n}\n\nexport function useInfiniteScroll(options, dependencies = []) {\n    const [page, setPage] = useState(1)\n    const items = useGetRequest({ ...options, params: { ...options.params, page } })\n    const [hasMore, setHasMore] = useState(false)\n    const observer = useRef()\n\n\n    useEffect(() => {\n        loadItems()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [page, ...dependencies])\n\n    async function loadItems() {\n        const { response } = await items.request()\n        const oldItems = items.response ? items.response.results : []\n        const newItems = response ? response.results : []\n\n        if (!response) return\n\n        items.setResponse({ count: response ? response.count : 0, results: [...oldItems, ...newItems] })\n        setHasMore(oldItems.length + newItems.length !== response.count)\n    }\n\n    async function reload() {\n        items.setResponse({ count: 0, results: [] })\n        setPage(1)\n        await items.request({ params: { ...options.params, page: 1 } })\n    }\n\n    const ref = useCallback((node) => {\n        if (items.loading) return\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver((entries) => {\n            if (entries[0].isIntersecting && hasMore) {\n                setPage(page + 1)\n            }\n        })\n        if (node) observer.current.observe(node)\n    }, [hasMore, items.loading, page])\n\n    return {\n        ref, ...items, hasMore, reload,\n    }\n}\n","import { useContext } from 'react'\nimport { Context } from '../components/common/BaseContext'\n\nexport function useMessage() {\n    const { setText, setClassName } = useContext(Context)\n\n    return [\n        (text, className) => {\n            setText(text)\n            setClassName(className || 'is-dark')\n        },\n        () => {\n            setText(null)\n            setClassName('')\n        },\n    ]\n}\n","import React from 'react'\nimport { ErrorMessage } from 'formik'\n\nexport default function ValidationErrorMessage({ name, ...attributes }) {\n    return (\n        <ErrorMessage\n            name={name}\n            {...attributes}\n            render={(msg) => <div className=\"has-text-danger\">{msg}</div>} />\n    )\n}\n","module.exports = __webpack_public_path__ + \"static/media/send_message.9655f6c7.png\";","import { Form, Formik } from 'formik'\nimport React from 'react'\nimport { required } from '../utils/validators'\nimport Input from './common/Input'\nimport Button from './common/Button'\n\n\nexport default function TodoForm({ onSubmit, loading, initialValues }) {\n    return (\n        <Formik initialValues={{ title: '', ...initialValues }} onSubmit={onSubmit}>\n            <Form>\n                <div className=\"columns\">\n                    <div className=\"column\">\n                        <Input\n                            name=\"title\"\n                            placeholder=\"Loyiha Nomi\"\n                            validate={required} /> &nbsp;\n                    </div>\n\n                    <div className=\"column is-narrow\">\n                        <Button\n                            text=\"Qo'shish\"\n                            loading={loading}\n                            type=\"submit\"\n                            icon=\"checkmark\"\n                            className=\"is-success\" /> &nbsp;\n                    </div>\n                </div>\n            </Form>\n        </Formik>\n    )\n}\n","import { Form, Formik } from 'formik'\nimport React from 'react'\nimport { required } from '../utils/validators'\nimport Input from './common/Input'\nimport Button from './common/Button'\n\n\nexport default function IncomeForm({ onSubmit, loading, initialValues }) {\n    return (\n        <Formik initialValues={{ title: '', isNumber: '', ...initialValues }} onSubmit={onSubmit}>\n            <Form>\n                <div className=\"columns\">\n                    <div className=\"column is-6\">\n                        <Input\n                            label=\"Daromadlar (Mahsulot va xizmatlar bo'yicha\"\n                            name=\"title\"\n                            placeholder=\"Daromadlar (Mahsulot va xizmatlar bo'yicha\"\n                            validate={required} /> &nbsp;\n                    </div>\n                    <div className=\"column is-4\">\n                        <Input\n                            label=\"Oylik hisobot uchun\"\n                            name=\"isNumber\"\n                            placeholder=\"Oylik hisobot uchun\"\n                            validate={required} /> &nbsp;\n                    </div>\n\n                    <div className=\"column is-narrow\">\n                        <Button\n                            text=\"Qo'shish\"\n                            loading={loading}\n                            type=\"submit\"\n                            icon=\"checkmark\"\n                            className=\"is-success mt-5\" /> &nbsp;\n                    </div>\n                </div>\n            </Form>\n        </Formik>\n    )\n}\n","import { Form, Formik } from 'formik'\nimport React from 'react'\nimport { required } from '../utils/validators'\nimport Input from './common/Input'\nimport Button from './common/Button'\n\n\nexport default function ExpensForm({ onSubmit, loading, initialValues }) {\n    return (\n        <Formik initialValues={{ title: '', isNumber: '', ...initialValues }} onSubmit={onSubmit}>\n            <Form>\n                <div className=\"columns\">\n                    <div className=\"column is-6\">\n                        <Input\n                            label=\"Xarajatlar\"\n                            name=\"title\"\n                            placeholder=\"Xarajatlar\"\n                            validate={required} /> &nbsp;\n                    </div>\n                    <div className=\"column is-4\">\n                        <Input\n                            label=\"Oylik hisobot uchun\"\n                            name=\"is_number\"\n                            placeholder=\"Oylik hisobot uchun\"\n                            validate={required} /> &nbsp;\n                    </div>\n\n                    <div className=\"column is-narrow\">\n                        <Button\n                            text=\"Qo'shish\"\n                            loading={loading}\n                            type=\"submit\"\n                            icon=\"checkmark\"\n                            className=\"is-success mt-5\" /> &nbsp;\n                    </div>\n                </div>\n\n            </Form>\n        </Formik>\n    )\n}\n","import cn from 'classnames'\nimport React, { useEffect, useState } from 'react'\nimport { css, StyleSheet } from 'aphrodite'\n\nexport default function Message({ text, className, closeMessage, delay = 3 }) {\n    const [hiding, setHiding] = useState(false)\n\n    useEffect(() => {\n        const hidingTimeout = setTimeout(() => setHiding(true), delay * 1000)\n        const hideTimeout = setTimeout(closeMessage, (delay + 1) * 1000)\n\n        return () => {\n            clearTimeout(hidingTimeout)\n            clearTimeout(hideTimeout)\n        }\n    }, [closeMessage, delay])\n\n    return (\n        <article className={cn('message', className, css(styles.message), { [css(styles.hide)]: hiding })}>\n            <div className=\"message-body\">\n                <span>{text}</span> &nbsp; &nbsp;\n                <button className=\"delete is-pulled-right\" onClick={closeMessage} />\n            </div>\n        </article>\n    )\n}\n\nconst styles = StyleSheet.create({\n    message: {\n        position: 'fixed',\n        top: '60px',\n        minWidth: '20rem',\n        right: '50px',\n        animationName: {\n            from: { opacity: 0 },\n            to: { opacity: 1 },\n        },\n        animationDuration: '1s',\n        zIndex: 1000,\n    },\n    hide: {\n        animationName: {\n            from: { opacity: 1 },\n            to: { opacity: 0 },\n        },\n        animationDuration: '1s',\n    },\n})\n","import React, { useEffect } from 'react'\nimport { createPortal } from 'react-dom'\nimport cn from 'classnames'\n\nexport default function Modal({ isActive, children, onClose }) {\n    useEffect(() => {\n        const handleKeyboard = (event) => {\n            if (event.keyCode === 27) {\n                onClose()\n            }\n        }\n\n        window.addEventListener('keydown', handleKeyboard)\n\n        return () => {\n            window.removeEventListener('keydown', handleKeyboard)\n        }\n    }, [onClose])\n\n    return createPortal((\n        <div className={cn('modal', { 'is-active': isActive })}>\n            <div className=\"modal-background\" onClick={onClose} />\n\n            <div className=\"modal-card\">\n                <div className=\"modal-card-body\">\n                    {children}\n                </div>\n            </div>\n\n            <button className=\"modal-close is-large\" onClick={onClose} />\n        </div>\n    ), document.querySelector('#modals-root'))\n}\n","import React, { createContext, useState } from 'react'\nimport Message from './Message'\nimport Modal from './Modal'\n\nexport const Context = createContext()\n\nexport default function BaseContextWrapper({ children }) {\n    const [text, setText] = useState()\n    const [className, setClassName] = useState('')\n    const [modalComponent, setModalComponent] = useState()\n\n    return (\n        <Context.Provider value={{ setText, setClassName, setModalComponent }}>\n            {children}\n\n            {text ? (\n                <Message\n                    text={text}\n                    className={className}\n                    closeMessage={() => setText(null)} />\n            ) : null}\n\n            {modalComponent ? (\n                <Modal\n                    isActive\n                    onClose={() => setModalComponent(null)}>\n                    {modalComponent}\n                </Modal>\n            ) : null}\n        </Context.Provider>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Field, useFormikContext } from 'formik'\nimport cn from 'classnames'\nimport isEmpty from 'lodash/isEmpty'\nimport ValidationErrorMessage from './ValidationErrorMessage'\n\nexport default function Select({\n    info,\n    name,\n    className,\n    label,\n    validate,\n    options = [],\n    optionValue = 'id',\n    optionLabel = 'title', // key name of function\n    loading = false,\n    empty = false,\n    optional = false,\n    help,\n    ...attributes\n}) {\n    const { setFieldValue, values, errors, touched } = useFormikContext()\n    const value = values[name]\n    const error = errors[name]\n    const touch = touched[name]\n    const [showInfoButton, setShowInfoButton] = useState(false)\n\n\n    useEffect(() => {\n        // Cast type to string if it is number.\n        // Because isEmpty function returns true if you pass any number\n        const strValue = typeof value === 'number' ? String(value) : value\n        if (!empty && isEmpty(strValue) && !isEmpty(options)) {\n            setFieldValue(name, options[0][optionValue])\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [options])\n    return (\n        <div className=\"field\">\n            <div className=\"control\">\n                {label ? (\n                    <div>\n                        <label htmlFor={name}>\n                            {label} &nbsp;\n                            {optional ? <span className=\"form-hint\">не обязательно</span> : null}\n                        </label>\n\n                        {info ? (\n                            <div onMouseLeave={() => setShowInfoButton(false)}\n                                onClick={(event) => event.stopPropagation()}\n                                className={cn(\n                                    'dropdown',\n                                    { 'is-active': showInfoButton },\n                                    className,\n                                )}>\n                                <div className=\"dropdown-trigger\">\n                                    <span className=\"icon is-small\">\n                                        <ion-icon onClick={() => setShowInfoButton(!showInfoButton)}\n                                            name=\"alert-circle-outline\" aria-hidden=\"true\" />\n                                    </span>\n                                </div>\n\n                                <div className=\"dropdown-menu\">\n                                    <div className=\"dropdown-content\">\n                                        <div className=\"dropdown-item\">\n                                            {info}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ) : null}\n                    </div>\n                ) : null}\n\n\n                <div className={cn('select is-fullwidth', { 'is-loading': loading })}>\n                    <Field\n                        name={name}\n                        id={name}\n                        component=\"select\"\n                        validate={validate}\n                        {...attributes}>\n\n                        {empty ? <option value=\"\" /> : null}\n\n                        {options.map((item) => (\n                            <option value={item[optionValue]} key={item[optionValue]}>\n                                {typeof optionLabel === 'function' ? optionLabel(item) : item[optionLabel]}\n                            </option>\n                        ))}\n                    </Field>\n                </div>\n\n                <ValidationErrorMessage name={name} />\n            </div>\n\n            {help && (!error || !touch) ? (\n                <p className=\"form-hint\">{help}</p>\n            ) : null}\n        </div>\n    )\n}\n","import { Form, Formik } from 'formik'\nimport React from 'react'\nimport { required } from '../utils/validators'\nimport Input from './common/Input'\nimport Button from './common/Button'\nimport Select from './common/Select'\nimport { useLoad } from '../hooks/request'\nimport { TODO_LIST } from '../urls'\n\nexport default function ProjectForm({ onSubmit, loading, initialValues }) {\n    const todos = useLoad({ url: TODO_LIST })\n    const options = todos.response ? todos.response : []\n\n    return (\n        <Formik initialValues={{\n            directorName: '',\n            incomeMonth: '',\n            clientNumber: '',\n            salary: '',\n            bannerNumber: '',\n            projectName: '',\n            ...initialValues,\n        }}\n            onSubmit={onSubmit}>\n            <Form>\n                <div className=\"columns\">\n                    <div className=\"column\">\n                        <Input\n                            label=\"Direktor Nomi\"\n                            name=\"directorName\"\n                            placeholder=\"Direktor Nomi\"\n                            validate={required} /> &nbsp;\n                    </div>\n\n                    <div className=\"column\">\n                        <Select\n                            label=\"Loyiha Nomi\"\n                            options={options}\n                            name=\"projectName\"\n                            placeholder=\"Loyiha Nomi\"\n                            validate={required} /> &nbsp;\n                    </div>\n\n\n                </div>\n                <div className=\"columns\">\n                    <div className=\"column\">\n                        <Input\n                            label=\"Joriy Oydgi Daromad\"\n                            name=\"incomeMonth\"\n                            placeholder=\"Joriy Oydgi Daromad\"\n                            validate={required} /> &nbsp;\n                    </div>\n                    <div className=\"column\">\n                        <Input\n                            label=\"Joriy oydagi mijozlar soni\"\n                            name=\"clientNumber\"\n                            placeholder=\"Joriy oydagi mijozlar soni\"\n                            validate={required} /> &nbsp;\n                    </div>\n\n\n                    <div className=\"column\">\n                        <Input\n                            label=\"Ish haqi\"\n                            name=\"salary\"\n                            placeholder=\"Ish haqi\"\n                            validate={required} /> &nbsp;\n                    </div>\n                    <div className=\"column\">\n                        <Input\n                            label=\"Marketing reklama\"\n                            name=\"bannerNumber\"\n                            placeholder=\"Marketing reklama\"\n                            validate={required} /> &nbsp;\n                    </div>\n\n                </div>\n\n                <div className=\"column is-narrow\">\n                    <Button\n                        text=\"Qo'shish\"\n                        loading={loading}\n                        type=\"submit\"\n                        icon=\"checkmark\"\n                        className=\"is-success\" /> &nbsp;\n                </div>\n            </Form>\n        </Formik>\n    )\n}\n","/* eslint-disable no-restricted-syntax */\nimport { integersOnly } from './number'\n\n/* eslint-disable consistent-return */\n\nexport function required(value) {\n    if (value === '' || value === null || value === undefined || value.length === 0) {\n        return 'Это обязательное поле'\n    }\n}\n\nexport function limitFileSize(size, file = null) {\n    // size on mb\n    return (value) => {\n        if ((file || value).size > size * 1048576) {\n            return `The maximum file size that can be uploaded is ${size}MB`\n        }\n    }\n}\n\nexport function maxNumber(limit) {\n    return (value) => {\n        if (value > limit) {\n            return `Максимальное значение ${limit}`\n        }\n    }\n}\n\nexport function minTime(startTime) {\n    return (endTime) => {\n        const valueStartTime = new Date(`2018.01.01 ${startTime}`).getTime()\n        const valueEndTime = new Date(`2018.01.01 ${endTime}`).getTime()\n        if (valueStartTime > valueEndTime) {\n            return 'Урок не может закончиться прежде чем начаться.'\n        }\n    }\n}\n\nexport function email(value) {\n    const regx = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!regx.test(value)) {\n        return 'Incorrect email address'\n    }\n}\n\nexport function phone(value) {\n    const integers = integersOnly(value)\n\n    if (integers.length !== 12) {\n        return 'Номер телефона должен состоять из 12 цифр'\n    }\n}\n\nfunction isNumber(value) {\n    return /^-?\\d*(\\.\\d+)?$/.test(value)\n}\n\nexport function number(value) {\n    if (!isNumber(value)) {\n        return 'This field should be number'\n    }\n}\n\nexport function max(size) {\n    return (value) => {\n        if (isNumber(value) && parseFloat(value) > size) {\n            return `This field should be less then \"${size}\"`\n        }\n    }\n}\n\nexport function maxLength(size) {\n    return (value) => {\n        if (value.length > size) {\n            return `This field should contain less then \"${size}\" chars.`\n        }\n    }\n}\n\nexport function minLength(size) {\n    return (value) => {\n        if (value.length < size) {\n            return `This field should contain more then \"${size}\" chars.`\n        }\n    }\n}\n\nexport function validator(...validators) {\n    return (value) => {\n        for (const fn of validators) {\n            const message = fn(value)\n            if (message) return message\n        }\n    }\n}\n","import React from 'react'\nimport { usePutRequest } from '../hooks/request'\nimport { TODO_DETAIL } from '../urls'\nimport TodoForm from './TodoForm'\n\n\nexport default function TodoUpdate({ item, onUpdate }) {\n    const update = usePutRequest({ url: TODO_DETAIL.replace('{id}', item.id) })\n\n    async function handleUpdate(data) {\n        await update.request({ data })\n        onUpdate()\n    }\n\n    return (\n        <TodoForm item={item} onSubmit={handleUpdate} initialValues={item} />\n    )\n}\n"],"sourceRoot":""}